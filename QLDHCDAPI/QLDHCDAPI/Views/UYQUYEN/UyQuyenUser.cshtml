@model QLDHCDAPI.Models.UYQUYEN

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm("UyQuyenUser", "UYQUYEN", new { @class = "formCreate form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Ủy quyền tham dự @ViewBag.TenDH</h4>
        <hr />
        @Html.ValidationSummary(true)

        @Html.HiddenFor(model => model.MADH)
        @Html.HiddenFor(mode => mode.THOIGIAN)

        <div class="form-group">
            @Html.LabelFor(model => model.MANGCHUYEN, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.MANGCHUYEN)
                <input type="text" class="form-control k-textbox" id="MaCoDinh" value="@ViewBag.MaCoDinh" readonly />
                <input type="text" id="MACD" name="MACD" class="form-control formNumberic k-textbox" value="@ViewBag.CDChuyen" readonly />
                <input type="text" id="HoTen" name="HoTen" class="form-control k-textbox" value="@ViewBag.TenNguoiChuyen" readonly />
                @Html.ValidationMessageFor(model => model.MANGCHUYEN)
            </div>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UYQUYENTYPE, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.UYQUYENTYPE)

                <input type="text" id="ddlUyquyenType" name="ddlType" value="Cho cổ đông khác" />
                <input type="text" id="ddlOptionUyquyenType" name="ddlOptionType" />
                @Html.ValidationMessageFor(model => model.UYQUYENTYPE)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MANGNHAN, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.MANGNHAN)
                <input type="text" class="form-control k-textbox" id="MaCoDinh2" value="@ViewBag.MaCoDinh" readonly />
                <input type="text" id="MACDNHAN" name="MACDNHAN" class="form-control formNumberic k-textbox" onchange="getTenCD('MACDNHAN', 'HoTenNHAN','MANGNHAN');" placeholder="Mã cổ đông người nhận" />

                @Html.ValidationMessageFor(model => model.MANGNHAN)
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2"> Họ tên người được UQ</label>
            <div class="col-md-10">
                <input type="text" id="HoTenNHAN" name="HoTenNHAN" class="form-control k-textbox" readonly />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">CMND/Hộ chiếu</label>
            <div class="col-md-10">
                <input type="text" id="CMND" name="CMND" class="form-control formNumberic k-textbox" readonly />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2"> Ngày cấp : (mm/dd/yyyy)</label>
            <div class="col-md-10">
                <input type="text" id="NgayCap" name="NgayCap" class="form-control" readonly />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2"> Nơi Cấp</label>
            <div class="col-md-10">
                <input type="text" id="NoiCap" name="NoiCap" class="form-control k-textbox" readonly />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2"> Địa chỉ</label>
            <div class="col-md-10">
                <input type="text" id="DiaChi" name="DiaChi" class="form-control k-textbox" readonly />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2"> Quốc tịch</label>
            <div class="col-md-10">
                <input type="text" id="QuocTich" name="QuocTich" class="form-control k-textbox" value="Việt Nam" readonly />
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.SLUQ, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.SLUQ, new { @class = "form-control formNumberic k-textbox" })
                @Html.ValidationMessageFor(model => model.SLUQ)
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="btnSubmitForm" type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts{
    <script>
        var dataJson;
        var listId = [];
    </script>
    <script>
        function getTenCD(id, hoten, matd) {
            var macd = $('#' + id).val();
            if (macd != null && macd.length > 0) {
                $.get("@(Request.Url.Scheme + "://"+ Request.Url.Authority)/qldhcdapi/CoDongAPI/GetCoDongFromMaCD?macd=" + macd + "&role=@(HttpContext.Current.Session["Role"]+ string.Empty)",
                         function (data) {
                             $('#' + hoten).val(data);
                             if (data != "") {
                                 var clearMaCD = parseInt(macd) + '';
                                 var macodinh = '@(ViewBag.MaCoDinh+string.Empty)';
                                 var pad = "00000";
                                 var mymacd = pad.substring(0, pad.length - clearMaCD.length) + clearMaCD;
                                 $('#' + matd).val(macodinh + mymacd);

                             }
                             ValidateForm();
                         });

            }
        }

        function ValidateForm() {
            try {
                
                if ($('#MACDNHAN').val() == null || $('#MACDNHAN').val() == '') {
                    $('#btnSubmitForm').prop('disabled', true);
                    return;
                }
                if ($('#MANGNHAN').val() == $('#MANGCHUYEN').val()) {
                    $('#btnSubmitForm').prop('disabled', true);
                    return;
                }
                
                if ($('#HoTenNHAN').val() == null || $('#HoTenNHAN').val() == '') {
                    $('#btnSubmitForm').prop('disabled', true);
                    return;
                }
                $('#btnSubmitForm').prop('disabled', false);
                return;
            }
            catch (err) {
                console.log(err);
                return false;
            }
        }

        //function btnSubmitClick() {
        //    dataJson = '';
        //    var ListMa = [];
        //    var Listty = [];
        //    var listMaTD = $('input[name="MATD"]');
        //    var listType = $('input[name="THANHVIENTYPE"]');
        //    $.each(listMaTD, function (index, value) {
        //        var myMatd = listMaTD[index].value;
        //        if (myMatd == null || myMatd == '') {
        //            return false;
        //        }
        //        else {
        //            ListMa.push(myMatd);
        //            Listty.push(listType[index].value);
        //            dataJson += myMatd + '##$$##' + listType[index].value + '##$$##';

        //        }
        //    });



        //    $('#myDataForm').val(dataJson);
        //    $('.formCreate')[0].submit();
        //    return true;;
        //}
        function SetReadOnlyInput() {
            $('#CMND').prop('readonly', true);
            $('#NgayCap').prop('readonly', true);
            $('#NoiCap').prop('readonly', true);
            $('#DiaChi').prop('readonly', true);
            $('#QuocTich').prop('readonly', true);
        }
        function SetNonReadOnlyInput() {
            $('#CMND').prop('readonly', false);
            $('#NgayCap').prop('readonly', false);
            $('#NoiCap').prop('readonly', false);
            $('#DiaChi').prop('readonly', false);
            $('#QuocTich').prop('readonly', false);
        }

        function ReadInfoFromMaTD(matd) {
            $.get("@(Request.Url.Scheme + "://"+ Request.Url.Authority)/qldhcdapi/THAMDUDHAPI/GetCoDongFromMaTD/" + matd + "?role=@(HttpContext.Current.Session["Role"]+ string.Empty)",
                function (result) {
                    if (result.success == "success") {
                        $('#HoTenNHAN').val(result.data.HoTen);
                        $('#CMND').val(result.data.CMND);
                        $('#NgayCap').val(result.data.NgayCap);
                        $('#NoiCap').val(result.data.NoiCap);
                        $('#DiaChi').val(result.data.DiaChi);
                        $('#QuocTich').val(result.data.QuocTich);
                        ValidateForm();
                    }
                    else {
                        alert('Lỗi không thể lấy dữ liệu');
                    }
                });
        }
        function ResetInfo() {
            $('#MACDNHAN').val('');
            $('#HoTenNHAN').val('');
            $('#CMND').val('');
            $('#NgayCap').val('@(DateTime.Now.Month + "/" + DateTime.Now.Day + "/" + DateTime.Now.Year)');
            $('#NoiCap').val('');
            $('#DiaChi').val('');
            $('#QuocTich').val('Việt Nam');
        }
        function GetListHDQT(dataOptionType, dataOptionKendo) {
            $.get("@(Request.Url.Scheme + "://"+ Request.Url.Authority)/qldhcdapi/thanhvienhdqtapi/GetTHANHVIENHDQTs?role=@(HttpContext.Current.Session[QLDHCDAPI.Core.Define.SessionName.Role] + string.Empty)",
        function (result) {
            if (result.success == "success") {
                $.each(result.data, function (index, row) {
                    dataOptionType.push(row);

                });
                dataOptionKendo.dataSource.data(dataOptionType);
            }
            else {
                alert("Không thể lấy dữ liệu");
            }
        });
        }

        function GetListBKS(dataOptionType, dataOptionKendo) {
            $.get("@(Request.Url.Scheme + "://"+ Request.Url.Authority)/qldhcdapi/THANHVIENBKSAPI/GetTHANHVIENHDQTs?role=@(HttpContext.Current.Session[QLDHCDAPI.Core.Define.SessionName.Role] + string.Empty)",
            function (result) {
                if (result.success == "success") {
                    $.each(result.data, function (index, row) {
                        dataOptionType.push(row);

                    });
                    dataOptionKendo.dataSource.data(dataOptionType);
                }
                else {
                    alert("Không thể lấy dữ liệu");
                }
            });
        }

    </script>
    <script>
        $(document).ready(function () {
            $('#UYQUYENTYPE').val('Cổ đông khác');

            $('#NgayCap').kendoDatePicker({
                format: "MM/dd/yyyy",
                value: "@(DateTime.Now.Month + "/" + DateTime.Now.Day + "/" + DateTime.Now.Year)"
            });

            $('#MACD').focusout(function (e) {
                var macd = $('#MACD').val();
                if (macd != null && macd.length > 0) {
                    $.get("@(Request.Url.Scheme + "://"+ Request.Url.Authority)/qldhcdapi/CoDongAPI/GetCoDongFromMaCD?macd=" + macd + "&role=@(HttpContext.Current.Session["Role"]+ string.Empty)",
                         function (data) {
                             $('#HoTen').val(data);
                             if (data != "") {
                                 var clearMaCD = parseInt(macd) + '';
                                 var macodinh = '@(ViewBag.MaCoDinh+string.Empty)';
                                 var pad = "00000";
                                 var mymacd = pad.substring(0, pad.length - clearMaCD.length) + clearMaCD;
                                 $('#MANGCHUYEN').val(macodinh + mymacd);

                             }
                             ValidateForm();
                         });

                }
            });

            $('#MACDNHAN').focusout(function (e) {
                var macd = $('#MACDNHAN').val();
                if (macd != null && macd.length > 0) {
                    $.get("@(Request.Url.Scheme + "://"+ Request.Url.Authority)/qldhcdapi/CoDongAPI/GetCoDongFromMaCD?macd=" + macd + "&role=@(HttpContext.Current.Session["Role"]+ string.Empty)",
                    function (data) {
                        $('#HoTenNHAN').val(data);
                        if (data != "") {
                            var clearMaCD = parseInt(macd) + '';
                            var macodinh = '@(ViewBag.MaCoDinh+string.Empty)';
                            var pad = "00000";
                            var mymacd = pad.substring(0, pad.length - clearMaCD.length) + clearMaCD;
                            $('#MANGNHAN').val(macodinh + mymacd);
                            Date().toString()
                        }
                        ValidateForm();
                    });

                }
            });
            var dataddlType = ["Hội đồng quản trị", "Ban kiểm soát", "Kế toán trưởng", "Cổ đông khác", "Cá nhân/tổ chức"];

            $('#ddlUyquyenType').kendoDropDownList({
                dataSource: dataddlType,
                index: 3,
                change: ddlTypeChange
            });
            var dataOptionType = [{ HoTen: "Select", MATD: -1 }];
            $('#ddlOptionUyquyenType').kendoDropDownList({
                dataTextField: "HoTen",
                dataValueField: "MATD",
                dataSource: dataOptionType,
                change: ddlOptionChange
            });
            var dataOptionKendo = $('#ddlOptionUyquyenType').data("kendoDropDownList");
            function ddlTypeChange() {
                ResetInfo();
                var ddlTypeValue = $('#ddlUyquyenType').val();
                dataOptionType = [{ HoTen: "Select", MATD: -1 }];
                $('#UYQUYENTYPE').val(ddlTypeValue);
                switch (ddlTypeValue) {
                    case "Hội đồng quản trị": {
                        GetListHDQT(dataOptionType, dataOptionKendo);
                        $('#ddlOptionUyquyenType').prop('disabled', false);
                        $('#HoTenNHAN').prop("readonly", true);
                        $('#MACDNHAN').prop("readonly", true);
                        SetReadOnlyInput();
                        break;
                    }
                    case "Ban kiểm soát": {
                        GetListBKS(dataOptionType, dataOptionKendo);
                        $('#ddlOptionUyquyenType').prop('disabled', false);
                        $('#HoTenNHAN').prop("readonly", true);
                        $('#MACDNHAN').prop("readonly", true);
                        SetReadOnlyInput();
                        break;
                    }
                    case "Kế toán trưởng": {

                        dataOptionKendo.dataSource.data(dataOptionType);
                        $('#ddlOptionUyquyenType').prop('disabled', false);
                        $('#HoTenNHAN').prop("readonly", true);
                        $('#MACDNHAN').prop("readonly", true);
                        SetReadOnlyInput();
                        break;
                    }
                    case "Cổ đông khác": {
                        dataOptionKendo.dataSource.data(dataOptionType);
                        $('#ddlOptionUyquyenType').prop('disabled', true);
                        $('#MACDNHAN').prop("readonly", false);
                        $('#HoTenNHAN').prop("readonly", true);
                        SetReadOnlyInput();
                        break
                    }
                    case "Cá nhân/tổ chức": {
                        dataOptionKendo.dataSource.data(dataOptionType);
                        $('#ddlOptionUyquyenType').prop('disabled', true);
                        $('#MACDNHAN').prop("readonly", true);
                        $('#HoTenNHAN').prop("readonly", false);
                        SetNonReadOnlyInput();
                        break;
                    }
                    default: return;
                }

            }

            function ddlOptionChange() {
                var valueNgNhan = $('#ddlOptionUyquyenType').val();
                if (valueNgNhan == -1) {
                    ResetInfo();
                }
                else {
                    $('#MANGNHAN').val(valueNgNhan);
                    var ArrayValue = valueNgNhan.split("@ViewBag.MaCoDinh");
                    var macdNhan = '';
                    for (var i = 0; i < ArrayValue.length; i++) {
                        macdNhan += ArrayValue[i];
                    }

                    $('#MACDNHAN').val(parseInt(macdNhan));
                    $('#HoTenNHAN').prop("readonly", true);
                    ReadInfoFromMaTD(valueNgNhan);
                }

            }
        });
    </script>
}
